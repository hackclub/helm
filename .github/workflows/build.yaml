name: Build

"on":
  workflow_call:
    inputs:
      path:
        description: Path to chart directory
        required: true
        type: string
      manifest:
        description: Output from release-please
        required: false
        type: string
  workflow_dispatch:
    inputs:
      path:
        description: Path to chart directory
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          token: ${{ secrets.PAT }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Add Helm Repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Build Chart Dependencies
        run: helm dependency build .
        working-directory: ${{ inputs.path }}

      - name: Lint Helm Chart
        run: helm lint .
        working-directory: ${{ inputs.path }}

      - name: Package Helm Chart
        run: |
          helm package .
          ls -la *.tgz
        working-directory: ${{ inputs.path }}

      - name: Login to GitHub Container Registry
        if: github.event_name == 'workflow_call' && inputs.manifest != ''
        run: |
          echo ${{ secrets.PAT }} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Publish to GitHub Packages
        if: github.event_name == 'workflow_call' && inputs.manifest != ''
        run: |
          CHART_NAME=$(helm show chart . | grep '^name:' | awk '{print $2}')
          helm push *.tgz oci://ghcr.io/${{ github.repository_owner }}
        working-directory: ${{ inputs.path }}

      - name: Prepare Helm Repository Index
        if: github.event_name == 'workflow_call' && inputs.manifest != ''
        run: |
          mkdir -p helm-repo
          cp ${{ inputs.path }}/*.tgz helm-repo/
          helm repo index helm-repo/ --url https://github.com/${{ github.repository }}/releases/download/${{ fromJSON(inputs.manifest)[format('{0}--tag_name', inputs.path)] }}

      - name: Upload Helm Repository to R2
        if: github.event_name == 'workflow_call' && inputs.manifest != ''
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: '${{ secrets.CLOUDFLARE_ACCOUNT_ID }}'
          r2-access-key-id: '${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}'
          r2-secret-access-key: '${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}'
          r2-bucket: launcherbinaries
          source-dir: helm-repo
          destination-dir: ./
          keep-file-fresh: true